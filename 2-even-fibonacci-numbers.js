/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

let fibArr = [0, 1]
let lastNum = 0;
let beforeLastNum = 0;
let evenNumSum = 0

doTheFibonacci = () => {
    const maxNumber = 4000000
    while (lastNum < maxNumber) {
        lastNum = fibArr[fibArr.length - 1]
        if (lastNum % 2 == 0) {
            evenNumSum += lastNum
        }
        beforeLastNum = fibArr[fibArr.length - 2]
        const sum = lastNum + beforeLastNum;
        fibArr.push(sum)
    }

    fibArr
    evenNumSum

    return evenNumSum;
}

const fibonacciSeq = doTheFibonacci()
fibonacciSeq